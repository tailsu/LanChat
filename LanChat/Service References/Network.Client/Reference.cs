//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LanChat.Network.Client {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Network.Client.IChatService")]
    public interface IChatService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/AnnounceParticipant")]
        void AnnounceParticipant(string nick);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/AnnounceParticipant")]
        System.Threading.Tasks.Task AnnounceParticipantAsync(string nick);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/RequestAnnouncement")]
        void RequestAnnouncement();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/RequestAnnouncement")]
        System.Threading.Tasks.Task RequestAnnouncementAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/SendMessage")]
        void SendMessage(string nick, string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatService/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(string nick, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceChannel : LanChat.Network.Client.IChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.ClientBase<LanChat.Network.Client.IChatService>, LanChat.Network.Client.IChatService {
        
        public ChatServiceClient() {
        }
        
        public ChatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AnnounceParticipant(string nick) {
            base.Channel.AnnounceParticipant(nick);
        }
        
        public System.Threading.Tasks.Task AnnounceParticipantAsync(string nick) {
            return base.Channel.AnnounceParticipantAsync(nick);
        }
        
        public void RequestAnnouncement() {
            base.Channel.RequestAnnouncement();
        }
        
        public System.Threading.Tasks.Task RequestAnnouncementAsync() {
            return base.Channel.RequestAnnouncementAsync();
        }
        
        public void SendMessage(string nick, string message) {
            base.Channel.SendMessage(nick, message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string nick, string message) {
            return base.Channel.SendMessageAsync(nick, message);
        }
    }
}
